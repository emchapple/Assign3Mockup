<?xml version="1.0"?>
<doc>
    <assembly>
        <name>News</name>
    </assembly>
    <members>
        <member name="T:COMP2614.News.Article">
            <summary>
            Represents a newsgroup article with header information, like date and subject, and the 
            body text, which is the actual article.
            </summary>
        </member>
        <member name="M:COMP2614.News.Article.#ctor(System.String,System.Int32,System.String,System.DateTime,System.String,System.Int32)">
            <summary>
            Initializes a new instance of the Article class.
            </summary>
            <param name="id">ID found in the article's header.</param>
            <param name="sequenceNum">Sequence number assigned by the newsgroup to which this article is posted.</param>
            <param name="from">Email address of the person who posted the article.</param>
            <param name="date">Date that the article was posted to the newsgroup.</param>
            <param name="subject">Subject given for this article.</param>
            <param name="lines">Estimated number of lines of text found in the article's body.</param>
        </member>
        <member name="M:COMP2614.News.Article.#ctor(System.String,System.Int32,System.String,System.DateTime,System.String,System.Int32,System.String)">
            <summary>
            Initializes a new instance of the Article class.
            </summary>
            <param name="id">ID found in the article's header.</param>
            <param name="sequenceNum">Sequence number assigned by the newsgroup to which this article is posted.</param>
            <param name="from">Email address of the person who posted the article.</param>
            <param name="date">Date that the article was posted to the newsgroup.</param>
            <param name="subject">Subject given for this article.</param>
            <param name="lines">Estimated number of lines of text found in the article's body.</param>
            <param name="body">Body text of the article.</param>
        </member>
        <member name="M:COMP2614.News.Article.ToString">
            <summary>
            Returns a string representation of this object.  In this case, the article's subject.
            </summary>
            <returns></returns>
        </member>
        <member name="P:COMP2614.News.Article.ID">
            <summary>
            Gets the ID of this article (found in the article's header).
            </summary>
        </member>
        <member name="P:COMP2614.News.Article.From">
            <summary>
            Gets the email address of the person who posted this article (found in the article's header).
            </summary>
        </member>
        <member name="P:COMP2614.News.Article.Date">
            <summary>
            Gets the date that this article was posted to the newsgroup (found in the article's header).
            </summary>
        </member>
        <member name="P:COMP2614.News.Article.Subject">
            <summary>
            Gets the subject of the article (found in the article's header).
            </summary>
        </member>
        <member name="P:COMP2614.News.Article.LineCount">
            <summary>
            Gets the estimated number of lines of this article's body text (found in the article's header).
            </summary>
        </member>
        <member name="P:COMP2614.News.Article.Body">
            <summary>
            Gets or sets the body text of this article.
            </summary>
        </member>
        <member name="P:COMP2614.News.Article.SequenceNumber">
            <summary>
            Gets the sequence number of this article that was assigned by the newsgroup to which this 
            article was posted.
            </summary>
        </member>
        <member name="T:COMP2614.News.ArticleCollection">
            <summary>
            Represents a collection of Article objects.
            </summary>
        </member>
        <member name="M:COMP2614.News.ArticleCollection.#ctor">
            <summary>
            Initializes a new instance of the ArticleCollection class.
            </summary>
        </member>
        <member name="M:COMP2614.News.ArticleCollection.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the ArticleCollection class with an initial capacity.
            </summary>
            <param name="capacity">The initial capacity of the collection.  The collection can
            still grow past capacity.  Specify this value for efficiency when the approximate 
            maximum size of the collection is already known.</param>
        </member>
        <member name="T:COMP2614.News.NewsConnection">
            <summary>
            Represents a connection to a news server.  All download and posting activity 
            is performed with this class.  Refer to the NNTP protocol for more
            information on how this class obtains news data.  
            http://www.ietf.cnri.reston.va.us/internet-drafts/draft-ietf-nntpext-base-27.txt
            and
            http://www.mibsoftware.com/userkt/0099.htm
            </summary>
        </member>
        <member name="M:COMP2614.News.NewsConnection.#ctor">
            <summary>
            Initializes a new instance of the NewsConnection class.
            </summary>
        </member>
        <member name="M:COMP2614.News.NewsConnection.Connect(System.String)">
            <summary>
            Connects to the given news server using port 119 (default NNTP port).  
            Throws an exception if the connection fails.
            </summary>
            <param name="server">name of the news server to connect to 
            (e.g. forums.sybase.com)</param>
        </member>
        <member name="M:COMP2614.News.NewsConnection.Disconnect">
            <summary>
            Disconnects from the news server.  If there is no connection, this method 
            does nothing.
            </summary>
        </member>
        <member name="M:COMP2614.News.NewsConnection.GetNewsgroups">
            <summary>
            Downloads all newsgroups, without articles.  Use GetArticleHeaders and 
            GetArticle methods to get article information.
            </summary>
            <returns>A collection of Newsgroup objects.  Each object's Articles 
            property will be null.  Use GetArticleHeaders to populate these objects 
            with Article objects.</returns>
        </member>
        <member name="M:COMP2614.News.NewsConnection.GetNewsgroups(System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String})">
            <summary>
            If includeList is not null then this method downloads the newsgroups
            that have any of the words in includeList in any part of the newsgroup 
            name.  If excludeList is not null then this method downloads the 
            newsgroups that do not have any of the words in the excludeList in any 
            part of the newsgroup name.  If both parameters are null then all 
            newsgroups are downloaded; if both are not null then an assertion is 
            raised.
            </summary>
            <param name="includeList">A collection of strings to search for in the 
            newsgroup names.  If any of the words are in any part of the newsgroup 
            name then that newsgroup is downloaded.  This value must be null if 
            excludeList is not null.</param>
            <param name="excludeList">A collection of strings to search for in the 
            newsgroup names.  If any of the words are in any part of the newsgroup 
            name then that newsgroup is not downloaded.  This value must be null if 
            includeList is not null.</param>
            <returns>A collection of Newsgroup objects that match the filter criteria 
            given by includeList or by excludeList.  Each object's Articles property 
            will be null.  Use GetArticleHeaders to populate these objects with 
            Article objects.</returns>
        </member>
        <member name="M:COMP2614.News.NewsConnection.GetArticleHeaders(COMP2614.News.Newsgroup)">
            <summary>
            Downloads all article headers for the given group.  Currently, only some
            of the header fields are downloaded: id, from, date, subject, lines.  The 
            body is not downloaded.  Use GetArticle to download an article's body 
            text.
            </summary>
            <param name="group">Newsgroup whose article headers will be 
            downloaded.</param>
            <returns>A collection of Article objects contained in the given 
            newsgroup.  The articles' body text is not downloaded.  Use GetArticle to 
            download an article's body text.</returns>
        </member>
        <member name="M:COMP2614.News.NewsConnection.GetArticleHeaders(COMP2614.News.Newsgroup,System.Int32)">
            <summary>
            Downloads up to maxHeaders article headers from the given group.  The 
            latest ones are chosen.  Currently, only some of the header fields are 
            downloaded: id, from, date, subject, lines.  The body is not 
            downloaded.  Use GetArticle to download an article's body text.  
            
            This method does not modify the Articles property of the group parameter.
            The suggested way to use this method is to store its returned ArticleCollection
            into group.Articles.
            </summary>
            <param name="group">Newsgroup whose articles headers will be 
            downloaded.</param>
            <param name="maxHeaders">Maximum number of article headers to download.  
            The latest ones are chosen.</param>
            <returns>A collection of Article objects contained in the given 
            newsgroup. The articles' body text is not downloaded. Use GetArticle to 
            download an article's body text.</returns>
        </member>
        <member name="M:COMP2614.News.NewsConnection.GetArticle(COMP2614.News.Newsgroup,COMP2614.News.Article)">
            <summary>
            Downloads the body text of the given article and 
            returns this as a string
            </summary>
            <param name="group">Newsgroup to which article belongs.</param>
            <param name="article">Article for which to download body text.</param>
            <returns>string - Article Text</returns>
        </member>
        <member name="M:COMP2614.News.NewsConnection.Response">
            <summary>
            Most of this method was copied from 
            http://www.developerfusion.co.uk/show/4472/, which is also available on 
            MSDN.
            </summary>
            <returns></returns>
        </member>
        <member name="P:COMP2614.News.NewsConnection.ConnectionState">
            <summary>
            Gets the connection state of this object.
            </summary>
        </member>
        <member name="T:COMP2614.News.NewsConnection.State">
            <summary>
            Connection State
            </summary>
        </member>
        <member name="F:COMP2614.News.NewsConnection.State.Closed">
            <summary>
            Connection is closed
            </summary>
        </member>
        <member name="F:COMP2614.News.NewsConnection.State.Open">
            <summary>
            Connection is open
            </summary>
        </member>
        <member name="T:COMP2614.News.NntpException">
            <summary>
            This exception is thrown whenever a public class of the News class library throws a custom
            exception.  You may use this class as a base class or simply catch NntpExceptions.
            </summary>
        </member>
        <member name="M:COMP2614.News.NntpException.#ctor(System.String)">
            <summary>
            NntpException constructor
            </summary>
            <param name="str">Error message</param>
        </member>
        <member name="M:COMP2614.News.NntpException.#ctor(System.String,System.Exception)">
            <summary>
            NntpException constructor
            </summary>
            <param name="message">Error message</param>
            <param name="innerException">Inner exception</param>
        </member>
        <member name="T:COMP2614.News.Newsgroup">
            <summary>
            Represents a newsgroup, including its name and a collection of articles.
            </summary>
        </member>
        <member name="M:COMP2614.News.Newsgroup.#ctor(System.String,System.Boolean,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the Newsgroup class.
            </summary>
            <param name="name">Name of the newsgroup.</param>
            <param name="postingAllowed">Whether or not posting is allowed to this newsgroup.  This value
            indicates.  Note that posting may still be prohibited to a client even though this value is true.
            This flag exists for each newsgroup because some newsgroups are moderated or are digests, and 
            therefore cannot be posted to; that is, articles posted to them must be mailed to a
            moderator who will post them for the submitter.  This is independent of the posting permission granted 
            to a client by the NNTP server.
            </param>
            <param name="firstArticleNum">Sequence number of the first known article in this newsgroup.</param>
            <param name="lastArticleNum">Sequence number of the last known article in this newsgroup.</param>
        </member>
        <member name="M:COMP2614.News.Newsgroup.#ctor(System.String,System.Boolean,System.Int32,System.Int32,COMP2614.News.ArticleCollection)">
            <summary>
            Initializes a new instance of the Newsgroup class.
            </summary>
            <param name="name">Name of the newsgroup.</param>
            <param name="postingAllowed">Whether or not posting is allowed to this newsgroup.  This value
            indicates.  Note that posting may still be prohibited to a client even though this value is true.
            This flag exists for each newsgroup because some newsgroups are moderated or are digests, and 
            therefore cannot be posted to; that is, articles posted to them must be mailed to a
            moderator who will post them for the submitter.  This is independent of the posting permission granted 
            to a client by the NNTP server.
            </param>
            <param name="firstArticleNum">Sequence number of the first known article in this newsgroup.</param>
            <param name="lastArticleNum">Sequence number of the last known article in this newsgroup.</param>
            <param name="articles">A collection of articles in this newsgroup.</param>
        </member>
        <member name="M:COMP2614.News.Newsgroup.ToString">
            <summary>
            Returns a string representation of this object.  In this case, the article's name.
            </summary>
            <returns></returns>
        </member>
        <member name="P:COMP2614.News.Newsgroup.Name">
            <summary>
            Gets the name of this newsgroup.
            </summary>
        </member>
        <member name="P:COMP2614.News.Newsgroup.PostingAllowed">
            <summary>
            Gets whether or not posting is allowed to this newsgroup.  Note that posting may still be prohibited to 
            a client even though this value is true.  This flag exists for each newsgroup because some newsgroups 
            are moderated or are digests, and therefore cannot be posted to; that is, articles posted to them 
            must be mailed to a moderator who will post them for the submitter.  This is independent of the 
            posting permission granted to a client by the NNTP server.
            </summary>
        </member>
        <member name="P:COMP2614.News.Newsgroup.EstimatedArticleCount">
            <summary>
            Number of articles, based on the first and last sequence number specified when this newsgroup 
            is created.  Use this value when the Articles property is null.  If Articles is not null then
            use Articles.Count for a more accurate count.  Note that Articles contains those articles that
            have been downloaded, which may be less than the total articles currently available in this
            newsgroup.
            </summary>
        </member>
        <member name="P:COMP2614.News.Newsgroup.Articles">
            <summary>
            Gets or sets a collection of articles that have been downloaded for this newsgroup.
            </summary>
        </member>
        <member name="T:COMP2614.News.NewsgroupCollection">
            <summary>
            Represents a collection of Newsgroup objects.
            </summary>
        </member>
        <member name="M:COMP2614.News.NewsgroupCollection.#ctor">
            <summary>
            Initializes a new instance of the NewsgroupCollection class.
            </summary>
        </member>
        <member name="M:COMP2614.News.NewsgroupCollection.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the NewsgroupCollection class with an initial capacity.
            </summary>
            <param name="capacity">The initial capacity of the collection.  The collection can
            still grow past capacity.  Specify this value for efficiency when the approximate 
            maximum size of the collection is already known.</param>
        </member>
    </members>
</doc>
